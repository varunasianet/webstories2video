[0;1;32m‚óè[0m api_service.service - API Service
     Loaded: loaded (/etc/systemd/system/api_service.service; enabled; vendor preset: enabled)
     Active: [0;1;32mactive (running)[0m since Wed 2024-08-21 10:49:54 UTC; 6s ago
   Main PID: 263907 (python)
      Tasks: 10 (limit: 36077)
     Memory: 778.9M
     CGroup: /system.slice/api_service.service
             ‚îú‚îÄ263907 python -m gunicorn --bind 0.0.0.0:8001 wsgi:app
             ‚îî‚îÄ263921 python -m gunicorn --bind 0.0.0.0:8001 wsgi:app

Aug 21 10:49:57 instance-20240731-141014 bash[263921]: [nltk_data]     /home/varun_saagar/nltk_data...
Aug 21 10:49:57 instance-20240731-141014 bash[263921]: [nltk_data]   Package punkt is already up-to-date!
Aug 21 10:49:59 instance-20240731-141014 bash[263921]: /home/varun_saagar/StyleTTS2-Sillytavern-api/models.py:604: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Aug 21 10:49:59 instance-20240731-141014 bash[263921]:   params = torch.load(model_path, map_location='cpu')['model']
Aug 21 10:50:00 instance-20240731-141014 bash[263921]: /home/varun_saagar/StyleTTS2-Sillytavern-api/models.py:588: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Aug 21 10:50:00 instance-20240731-141014 bash[263921]:   params = torch.load(path, map_location='cpu')['net']
Aug 21 10:50:00 instance-20240731-141014 bash[263921]: /home/varun_saagar/StyleTTS2-Sillytavern-api/Utils/PLBERT/util.py:30: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Aug 21 10:50:00 instance-20240731-141014 bash[263921]:   checkpoint = torch.load(log_dir + "/step_" + str(iters) + ".t7", map_location='cpu')
Aug 21 10:50:00 instance-20240731-141014 bash[263921]: /home/varun_saagar/StyleTTS2-Sillytavern-api/styletts/lib/python3.11/site-packages/torch/nn/utils/weight_norm.py:134: FutureWarning: `torch.nn.utils.weight_norm` is deprecated in favor of `torch.nn.utils.parametrizations.weight_norm`.
Aug 21 10:50:00 instance-20240731-141014 bash[263921]:   WeightNorm.apply(module, name, dim)
